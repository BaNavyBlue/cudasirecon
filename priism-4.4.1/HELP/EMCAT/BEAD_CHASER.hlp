KEYWORD
      IdatFile IslFile OslFile NX:NY:NV bead_radius rot0 area_lub shape_lb
      barea_pct_mult rad_search IsblFile xc_aat new_bp *nRange *iv *iRef
      *res *ppmin *IprmFile

DESCRIPTION
      This is the third step in automatic/interactive bead
      alignment.  This program attempts to dig out missing
      bead positions in the bead list file created by
      BEAD_MATCHER.

      The algorithm is to first calculate the shifts between
      projections.  Starting with the projection whose tilt
      is closest to zero, for each projection i the shift
      parameters are derived from common bead positions from
      the input .sl bead list between projection i and some
      other projection in the searching range of n0 (set by
      the nRange input parameter), or, if a .sbl file
      (set by the IsblFile input parameter) or alignment
      parameter file (set by the IprmFile input parameter)
      has been provided, those are used to obtain the shift
      parameters.  If the shift parameters for certain
      projections cannot be achieved with one of these three
      methods, the program will stop and ask to pick (extra)
      single bead positions on these sections for a .sbl file.

      Once the rough alignment parameters are available for
      the whole data stack, start from the section whose tilt
      is closest to zero and for section i with missing bead,
      Bij:

        1.  Find the corresponding position (Bkj) on the
            closest neighboring section k among the adjacent
            n0 projections.  If Bkj is not found, Bij will not
            be searched.  It is optional to add the newly found
            positions to the .sl bead list pool in searching
            Bkj for predicting Bij.
        2.  Find the missing bead position Bij by searching in
            a range rad_search around the predicted position.
            The search procedure either uses the local cross-
            correlation peak combined with other criteria on
            the original projection or an adaptive threshold
            on the amplitude as used in BEAD_FINDER.  The
            reference bead for the search can be a model bead
            or a region around corresponding bead position
            in a previous projection (the program takes the
            first found bead-like feature around the predicted
            position in digging each bead position).
        3.  With the list of features found in the previous
            step,
            a.  Rank each bead-like feature by feature area
                minus expected area.
            b.  Rank each bead-like feature by its shape factor
                (the ratio of its area to its circumference
                squared).
            c.  Score each bead-like feature on the basis of
                the two calculated ranks.  The score is the
                simple sum of the area rank and the shape
                factor rank.
            d.  Choose the feature with the highest score.
        4.  Merge the newly found positions with the existing
            list.  If any pair of positions is the same (or very
            close when the reference bead is from Bkj), reject
            both.

                **** BEAD_CHASER: Command File ***
      #example command file for bead_chaser
      ( time bead_chaser \
        /mama/weiping/test/cent5r.stk \
        /mama/weiping/test/cent5r.sl \
        /mama/weiping/test/cent5r.sl2 -beadrad=3.5 \
        -rot0=78:-1 -area_lub=.4:6 -shape lb=.4 \
        -barea_pct_mult=2 -rad_search=8 -isblfile=none \
        -xc_aat=0 -n0=10 -iv=0:22 -iref=-1
        -iprmfile=none ) > /mama/weiping/BALIGN.log

IdatFile
      This is the name of the file containing the raw projection
      data stack from the CCD (i.e. measured in terms of electron
      counts; data stacks with the contrast inverted can not be
      handled).

IslFile
      IslFile is the name of the input point list file which has
      the sorted and matched bead coordinates from BEAD_MATCHER.

OslFile
      OslFile is the name of the file which BEAD_CHASER should
      create to store its output (the input sorted and matched
      bead coordinates with the additional beads that were found).

NX:NY:NV
      The first two values are, respectively, the x and y
      dimension of the projections.  The third value is the
      number of projections in the data stack.

bead_radius
      This is the average bead radius in pixel units.  It sets
      the expected bead area, area0, which is used to identify
      bead-like features.  To specify this parameter from the
      command line, use

        -beadrad=<r>

      The default value is 3.5 pixels.

rot0
      Let the orientation angle be the smallest, in absolute
      value, rotation angle needed to rotate the image so
      that the tilt axis is parallel to the y axis (the y
      axis is vertical when images are displayed in Priism).
      The orientation angle is positive if the corresponding
      rotation is clockwise and is negative if the corres-
      ponding rotation is counterclockwise.  The first value
      in the rot0 field is the estimated orientation angle,
      in degrees, at a tilt angle of zero.  The second value
      is the estimated difference, in degrees, between the
      orientation angle at a tilt angle of sixty degrees and
      the orientation angle at a tilt angle of minus sixty
      degrees.  To specify these parameters from the command
      line, use

        -rot0=<o0>:<ochange>

      The default value for o0 is 78 degrees; the default
      value for ochange is -1 degrees.  You should substitute
      values that more accurately reflect what happens at
      the magnification used when  collecting the tilt series.

area_lub
      Sets the range on the area for a bead-like feature. The
      first value, arealb, in the field is the lower bound 
      on the area; the second value, areaub is the upper bound.
      Both are expressed as multiples of the expected area,
      area0, which is set by the bead_radius input parameter.
      Thus, a bead-like feature will have an area in square
      pixels between arealb*PI*bead_radius^2 and
      areaub*PI*bead_radius^2.

      These parameters are set on the command line with

        -area_lub=<arealb>:<areaub>

      The default values are 0.4 for the lower bound and 3 for
      the upper bound.

shape_lb
      The second criteria that bead-like features must meet is
      that the quantity (the shape factor),

        4*PI*(feature area)/(feature circumference)^2

      must exceed a threshold.  This parameter sets that
      threshold.  By its definition, the shape factor falls in
      the range [0, 1], and a circle has a shape factor of 1.

      On the command line, the threshold for the shape factor
      is set by

        -shape_lb=<lb>

      The default value for lb is 0.4.

barea_pct_mult
      This parameter set the upper limit on the area which is
      non-zero in the binary image.  If the limit, u, is greater
      than one, then the limit imposed on the area is

         u * (maximum number of beads) * (expected bead area)

      If u is less than one, then it is used directly as the
      fraction of each projection which can be non-zero.

      The option

        -barea_pct_mult=<u>

      sets the limit from the command line.  The default value of
      u is two.

rad_search
      This parameter sets the radius, in pixels, of the region
      about a predicted bead position that is searched for a
      missing bead.

      Use

        -rad_sr=<search_radius>

      to specify this parameters on the command line.  If not set,
      the default is to use three times the expected bead radius
      for the search range.  Internally, the search radius is
      coerced to be larger than two times the bead radius.

IsblFile
      This parameter gives the name of a file that contains the
      coordinates of a single reference bead on all projections.
      These coordinates are used to enable better prediction of
      bead positions in the matching step and can be used to work
      around the problems created by large image shifts between
      adjacent projections.  Specifying rough alignment parameters
      with IprmFile is another way to do this, but keep in mind
      that the translational parameters from IsblFile have
      priority over those from the alignment parameters file.

      The typical way to generate IsblFile is to use the bead
      list editor (PEdit)  to interactively select the positions.

      This parameter is specified on the command line with

        -isblfile=<file_name>

      The default value is "none" which indicates that no
      IsblFile is available.

xc_aat
      There are two options for the algorithm used to search
      for beads. The first, "chasing method: x-c", looks
      for peaks in the cross-correlation of the projection
      data with the expected bead shape. The second, 
      "chasing method: at", uses an adaptive thresholding
      approach.  By default, the cross-correlation algorithm
      is used.

      On the command line, use

        -xc_aat=0

      to select the cross-correlation algorithm and

        -xc_aat=1

      to select adaptive thresholding.

new_bp
      When this toggle is not set, only those locations present
      in the input bead list are used when searching adjacent
      projections for known bead positions in order to predict
      the position of a bead in a projection where it was not
      found.  This implies that, if a bead was only found in
      projections i0 through i1 in the input list, that
      largest range of projections where it will be found by
      BEAD_CHASER is i0 - n0/2 to i1 + n0/2 (n0 is set by the
      nRange input parameter).

      When the toggle on, the locations that have been found so
      far by BEAD_CHASER are also considered which avoids the
      limitation on extending the range of projections where
      a bead is found but increases the chance the program
      will follow an erroneous prediction and misidentify
      bead locations.

      On the command line, use

        -new_bp

      to use locations found by BEAD_CHASER in addition to those
      present in the input list when predicting missing bead
      positions.  The default is not to include the newly found
     locations.

*nRange
      This is the number of adjacent projections to search
      when finding common beads between projection to
      determine the shift parameters and when finding a
      bead position in one projection to predict the missing
      bead position in another.

      The command line switch to set the number of projections
      searched, n, is
        -n0=<n>

      The default value fo n is ten.

*iv
      These two values, which are the index of the first
      projection to use and the maximum index to use, can
      be used to limit which projections BEAD_CHASER
      processes.  This is frequently useful when experimenting
      with different thresholds or bead feature criteria.
      The default is to process all the projections so the
      index of the first projection is zero and the maximum
      index is the number of projections minus one.

      The range of projections to use is set from the command
      line with

        -iv=<first>:<last>

*iRef
      This parameter sets the starting section for the algorithms
      to calculate the shift parameters and locate missing beads.
      The default is to use the section whose tilt angle is closest
      to zero.

      The starting section, v, is specified on the command line
      with

        -iref=<v>

*res
      This parameter sets which resolution to use from the
      input tilt series if the input tilt series has multiple
      resolutions available.  The resolutions are numbered
      from zero with zero as the highest resolution and
      increasing values correspond to decreasing resolution.
      The resolution to use is set on the command line with

        -res=<ires>

*ppmin
      This parameter sets a lower bound on intensity values
      included in the calculation of the background statistics
      for the adaptive threshold search method; it has no
      effect at all if you use the local cross-correlation
      search method.  The default value is 100 to match what
      previous versions implicitly used.  The command line
      parameter to set the lower bound is

        -ppmin=<bound>

*IprmFile
      IprmFile is the name of an optional file which has the
      rough alignment parameters is standard format.  It
      can be from EM calibration and stretched cross-
      correlation alignment.  The alignment parameters are
      used to predict the missing bead positions when no
      common bead positions in the input .sl file are found
      in adjacent projections and when no .sbl file is
      available or it does not have beads to relate the
      position of the section of interest to the previous
      one.  If all three of these methods fail, the program
      will stop and ask to pick (extra) single bead positions
      on these sections for a .sbl file.

      The rough alignment parameter file is set on the command
      line with

        -iprmfile=<file>

      The default is "none" which specified that a parameter
      file is not available.
