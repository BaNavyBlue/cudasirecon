KEYWORD
      IdatFile OplFile NX:NY:NV bead_radius area_lub shape_lb
      nbd_minmax barea_pct_mult size_lbck iv merge_plfile *lbckg_mm
      *rsat *res *ppmin *OthrFile *ObinFile

DESCRIPTION
      BEAD_FINDER is the first step in automatic/interactive bead
      alignment.  This program finds and ranks bead-like features
      in a data stack, using an adaptive amplitude threshold
      approach:

        1.  Compute the local background image from the local mean
            or local maximum.
        2.  Compute relative height image weighted by a saturation
            factor.  The relative height is

              wt * (1 - (raw data) / (local background))

            where wt is one when the raw data value is greater than
            or equal to the background mean otherwise wt is

              wt = exp[-alpha * (mean_sec -local_ref) / mean_sec]

            where the constant  alpha is chosen such that wt equals
            the saturation factor when the raw data value is the
            minimum of the background image.
        3.  Find the threshold that gives the desired percentage of
            qualified pixels when a binary image is created by
            applying an amplitude threshold to the relative height
            image.
              a.  Calculate the histogram of relative height image.
              b.  Find the threshold that gives a fraction, f, of
                  the pixels greater than the threshold percentage.
                  How f is controlled is determined by the value of
                  the barea_pct_mult input parameter.
        4.  Calculate the binary thresholded image by assessing each
            pixel. If the value in the relative height image is
            greater than the threshold and the pixel has two or more
            neighbors whose values are above the threshold than
            the binary image is set to one at that location;
            otherwise, it is set to zero.
        5.  Find bead-like features in the binary image.  A bead-like
            feature satisfies:
              a.  Its area divided by the expected bead area is within
                  the bounds set by the area_lub input parameter.
              b.  Its shape is close enough to circular.  For details
                  on how this is determined see the description of the
                  shape_llb input.
            Then, after a list of such features are found,
              a.  If the number of bead-like features found is less
                  than the minimum expected number, the two criteria
                  will be loosened to find more.  Several such trials
                  are repeated if needed.
              b.  If the number of beadk-like features found is greater
                  than the maximum expected number, the two criteria are
                  tightened to find fewer than the maximum.  Several
                  such trials are repeated if needed.
              c.  Rank each bead-like feature according to its area
                  minus the expected area.
              d.  Rank each bead-like feature according to its shape
                  factor.
              e.  Score each bead-like feature using these rankings by
                    score = area_rank + shape_rank
              f.  Rank the scores and choose up to the maximum expected
                  number of beads with the top scores.

      #example command file for bead_finder
      (time bead_finder /oahu1/weiping/cent-10k.stk \
       /oahu1/weiping/cent-10k.pl_one -beadrad=3.5 -area_lub=.4:3 \
       -shape_lb=.4 -ndb_minmax=4:50 -barea_pct_mult=3 -size_lbck=-1 \
       -iv=58:58:1 -merge_plfile=none -lbckg_mm=0 -rsat=1 \
       -othrfile=/oahu1/weiping/cent-10k.stk_thr \
       -obinfile=/oahu1/weiping/cent-10k.stk_bin )

IdatFile
      This is the name of the file containing the raw projection
      data stack from the CCD (i.e. measured in terms of electron
      counts; data stacks with the contrast inverted can not be
      handled).

OplFile
      OplFile is the point list file that stores the coordinates
      of found bead-like features on the projections and the
      corresponding ranking parameters.  7 parameters are saved
      for each feature:
        1.  x
        2.  y
        3.  section
        4.  area divided by the expected area
        5.  shape factor
        6.  ranking (relative to other peaks in the section) of the
            area divided by the expected area (a value less than zero
            means the area is less than the expected area)
        7.  ranking (relative to other peaks in the section) of
            the shape factor

NX:NY:NV
      The first two values are, respectively, the x and y dimension
      of the projections.  The third value is the number of projections
      in the data stack.

bead_radius
      This is the expected bead radius in pixels.  It sets the
      expected bead area, area0, which is used to identify
      bead-like features in binary images.  To specify this
      parameter from the command line, use

        -beadrad=<r>

      The default value is 3.5 pixels.

area_lub
      Sets the range on the area for a bead-like feature. The
      first value, arealb, in the field is the lower bound 
      on the area; the second value, areaub is the upper bound.
      Both are expressed as multiples of the expected area,
      area0, which is set by the bead_radius input parameter.
      Thus, a bead-like feature will have an area in square
      pixels between arealb*PI*bead_radius^2 and
      areaub*PI*bead_radius^2.

      These parameters are set on the command line with

        -area_lub=<arealb>:<areaub>

      The default values are 0.4 for the lower bound and 3 for
      the upper bound.

shape_lb
      The second criteria that bead-like features must meet is
      that the quantity (the shape factor),

        4*PI*(feature area)/(feature circumference)^2

      must exceed a threshold.  This parameter sets that
      threshold.  By its definition, the shape factor falls in
      the range [0, 1], and a circle has a shape factor of 1.

      On the command line, the threshold for the shape factor
      is set by

        -shape_lb=<lb>

      The default value for lb is 0.4.

nbd_minmax
      These two values are, respectively, the minimum and maximum
      number of beads that are expected on each section.  The
      program will attempt to find more beads if it locates less
      than the minimum number or reject possible bead-like
      features if it finds more than the maximum,  It does this
      by dynamically adjusting the two criteria for a bead, the
      area and shape factor.

      The bounds on the number of beads in each section are set
      from the command line with

        -nbd_minmax=<min>:<max>

barea_pct_mult
      This parameter set the upper limit on the area which is
      non-zero in the binary image.  If the limit, u, is greater
      than one, then the limit imposed on the area is

         u * (maximum number of beads) * (expected bead area)

      If u is less than one, then it is used directly as the
      fraction of each projection which can be non-zero.

      The option

        -barea_pct_mult=<u>

      sets the limit from the command line.  The default value of
      u is two.

size_lbck
      This parameter sets the length (in pixels) of one side of a
      square region about each pixel which is used to estimate
      the local background (the difference between the raw
      projections and the local background gives the relative
      height image used for locating beads).

      The default value, which is the larger of 3 or eight times
      the bead radius, is used whenever this parameter is less
      than 3 or is not specified.  On the command line, the box
      size is set by

        -size_lbck=<box_size>

iv
      These three values, which are the index of the first
      projection to use, the maximum index which can be used,
      and the index increment, can be used to limit which
      projections BEAD_FINDER processes.  This is frequently
      useful when experimenting with different thresholds.
      The default is to process all the projections so the
      index of the first projection is zero, the maximum
      index is the number of projections minus one, and the
      increment is one.

      The range of projections to use is set from the command
      line with

        -iv=<first>:<max>:<step>

merge_plfile
      The beads found in a run of BEAD_FINDER will be merged with
      those stored in this file.  That is, for the bead list of any
      section, if BEAD_FINDER is run on that section, the
      corresponding bead list is saved to the output .pl file;
      if BEAD_FINDER is not run on that section, the results for
      that section (if any) are copied from the file specified by
      merge_plfile.

      Merging is normally done when the bead feature criterion are
      good for most sections, but a few sections need special handling
      with different parameters.

      On the command line, the file with which to merge the results
      is specified with

        -merge_plfile=<file_name>

      If "none" is used as the file name (this is the default),
      no merging is done.

*lbckg_mm
      With the "local bckg: mean" option, a mean over
      a local region is used to estimate the background value.
      This is the default.  With the "local bckg: max" option,
      the maximum value in a local region is used to estimate
      the background.  The size of the local region is set by
      "lBckg: size".

      On the command line, use

        -lbckg_mm=0

      to use the local mean and use

        -lbckg_mm=1

      to use the local maximum.

*rsat
      This parameter is the saturation value used to weight
      the difference of pixel value and the estimate of the
      background level.  The weighted differences at each
      pixel form the relative height image in which beads
      are located.  In detail, the relative height image at
      a point is

        wt * (1 - (raw pixel value) / (local background))

      Where the weighting factor, wt, is one when the raw data
      value is greater than the mean of the projection and is

        exp[-alpha*((projection mean)-(raw value))/(projection mean)]

      where alpha is set such that wt is equal to rsat when the
      raw pixel value is equal to the smallest value in the
      estimated background image.  When rsat is 1 (the default)
      no weighting is applied.

      The saturation level is set on the command line with

        -rsat=<level>

*res
      This parameter sets which resolution to use from the
      input tilt series if the input tilt series has multiple
      resolutions available.  The resolutions are numbered
      from zero with zero as the highest resolution and
      increasing values correspond to decreasing resolution.
      The resolution to use is set on the command line with

        -res=<ires>

*ppmin
      This parameter sets a lower bound on intensity values
      included in the calculation of the background statistics.
      The default value is 100 to match what previous versions
      implicitly used.  The command line parameter to set
      the lower bound is

        -ppmin=<bound>

*OthrFile
      This parameter sets the name of the image file which will
      be filled with the relative height data (the weighted
      difference of the input data and local estimates of the
      background).

      The file name is set from the command line with

        -othrfile=<file_name>

      If not specified, the relative height data are written to
      a file with the same name as the input data stack but with
      ".stk_thr" appended.  Use "none" for file_name if you do
      not want the relative height data.

*ObinFile
      This parameter sets the name of the image file which will
      be filled with the binary images resulting from applying
      a threshold to the relative height data.

      The file name is set from the command line with

        -obinfile=<file_name>

      If not specified, the binary images are written to a file
      with the same name as the input data stack but with ".stk_bin"
      appended.  Use "none" for file_name if you do not want the
      binary image data.
