KEYWORD
      TiltSeries Corrected InputAlignment AccelerationVoltage
      SphericalAberration SemiconvergenceAngle AmplitudeContrast
      Defocus DectectorMTF Operation WienerParameter StripeSize
      Invert Rotate ReverseAxis FilterSize AxisOrientation TiltAngle
      PixelSize PointSource Resolution Multires SectionRange
      CommandLine

DESCRIPTION
      pfocusramp will inverse filter, phase flip, or filter
      a single-axis tomographic series to account for the
      contrast transfer function, CTF, of the electron
      microscope.  pfocusramp can perform the filtering in
      a piecewise fashion, with strips parallel to the tilt
      axis, to approximate the change in defocus across the
      image.

      Our recommended recipe for incorporating pfocusramp
      into the processing of tomographic data is this:

      1) Use EMTAR's rough alignment step to extract the
         tilt axis orientation and tilt angles recorded
         by the data collection system and EMTAR's
         mass normalization, and, as needed,
         tilt axis determination to adjust that geometry.
      2) Use pfocusramp to inverse filter the images of
         the tilt series.  Specify as the input
         alignment file, the result computed by the first
         step.
      3) Use the result from pfocusramp as the input to
         EMTAR's alignment, if you want to update the
         alignment parameters, and to APPL_PRM to
         generate the aligned and normalized tilt series
         to use with one of the reconstruction algorithms.

      pfocusramp can extract the tilt angles and axis
      orientation information from the extended header
      of data generated by UCSF Tomography so you can
      omit the first step if you do not need the
      corrections from the mass-normalization or tilt
      axis determination calculations.  It is also
      possible to run pfocusramp on the result of
      APPL_PRM, rather than other way around.  To do
      so, you would not want to apply the logarithmic
      image formation model (either use one of the
      other models or use the linear model and apply
      the logarithmic model by running APPL_PRM again
      after pfocusramp) in APPL_PRM, and you'll need
      to adjust the rotate parameter for pfocusramp
      so it assumes the tilt axis is vertical in the
      input images.

      The form of the CTF is set by the values for
      the acceleration voltage, spherical aberration,
      semi-convergence angle, amplitude contrast,
      defocus, and detector MTF.  With the default
      values for the semi-convergence angle and
      detector MTF, the oscillations in the CTF
      are not damped at high spatial frequencies
      and that can lead to artifacts in the results
      from pfocusramp.  In some cases, you can
      reduce those artifacts by increasing the
      size for the filter.  A better way to avoid
      those artifacts is to choose values for the
      semi-convergence angle and detector MTF that
      approximate how the CTF of your microscope
      is damped at high spatial frequencies.

      By default, pfocusramp applies an inverse
      filter (approximated by a Wiener filter)
      to reverse the effects of the CTF.  You
      can change that by selecting a different
      operation to perform.  To control how
      finely the images are divided for piecewise
      filtering, adjust the stripe size parameter.
      The default value for the stripe size, zero,
      causes each image to be processed as a
      whole, as if there was no change in defocus
      across the image.

      The CommandLine topic describes how to run
      pfocusramp without going through EMTAR's
      user interface.

TiltSeries
      The input images for pfocusramp must be
      provided as a file in Priism's MRC format.
      From the graphical user interface, use the
      field labeled "TiltSeries" to specify the
      file name for the input images.  When run
      from the command line, the first argument
      that does not begin with a "-" will specify
      the file name for the input images.  If
      there is no such argument, pfocusramp will
      read the file name from standard input.

      If the input file has an extended header
      in the format used by UCSF Tomography,
      pfocusramp can extract the tilt angles
      and tilt axis orientation from the
      extended header.  You can override those
      values or make up for their absence, by
      supplying an alignment parameter file
      or using the tilt angle and axis
      orientation parameters.

      By default, pfocusramp uses the x pixel
      spacing recorded in the header as the
      pixel spacing for the images in Angstroms.
      You can override that value by adjusting
      the pixel size parameter.

Corrected
      pfocusramp will write its result as a file
      in Priism's MRC format.  From the graphical
      user interface, use the field labeled
      "Corrected" to specify the file name for
      the result.  When run from the command line,
      the second argument that does not begin with
      a "-" will specify the file name for the
      result.  If there is no such argument,
      pfocusramp will read the file name from
      standard input after, if necessary, it
      reads the file name for the input images.

InputAlignment
      If pfocusramp is provided with an alignment
      parameter file (in the same text format as
      used by the Priism programs that generate
      alignment parameter files), it will use that
      information for the tilt angles and tilt
      axis orientation.  Without an alignment
      parameter file, pfocusramp will extract the
      tilt angle and tilt axis information from
      the extended header of the input file or
      will use the values set by the tilt angle
      and axis orientation parameters.

      From the graphical user interface, use the
      field labeled "Input alignment" to set the
      file name for the alignment parameter file.
      If that field is empty or its contents are
      "none", pfocusramp will assume that no
      alignment parameter file is available.

      On the command line, include -iprmfile=path
      in the options, where path is the file name
      for the alignment parameter file, to use an
      alignment parameter file.  If the options
      do not include -iprmfile= or path is an
      empty string or "none", pfocusramp will
      assume that no alignment parameter file is
      available.

AccelerationVoltage
      The form of the CTF depends on the
      acceleration voltage for the microscope.
      From the graphical user interface, enter
      the acceleration voltage, in kilovolts,
      in the field labeled "Acceleration
      voltage (kv)".  On the command line,
      include -kv=acc in the options to set
      the acceleration voltage to be acc
      kilovolts.  If the options do not
      include -kv=, pfocusramp will assume
      an acceleration voltage of 300
      kilovolts.

SphericalAberration
      The form of the CTF depends on the
      amount of spherical aberration in
      the system.  From the graphical user
      interface, enter the amount of spherical
      aberration, in millimeters, in the
      field labeled "Spherical aberration (mm)".
      On the command line, include -cs=sa in
      the options to set the amount of spherical
      aberration to be sa millimeters.  If the
      options do not include -cs=, pfocusramp
      will assume a spherical aberration of 2.2
      millimeters.

SemiconvergenceAngle
      The model of the CTF parameterizes the
      limited spatial coherence of the microscope
      by one parameter, the semi-convergence angle
      for the electron beam.  From the graphical
      user interface, enter the size of the semi-
      convergence angle, in milliradians, in the
      field labeled "Semi-convergence angel (mrad)".
      On the command line, include -semiconv=ang
      in the options to set the semi-convergence
      angle to be <VAR>ang</VAR> milliradians.
      If the options do not include -semiconv=,
      pfocusramp will assume that the semi-
      convergence angle is zero milliradians.

      If you use both the default values for the
      semi-convergence angle and detector MTF,
      the CTF will not be damped at high spatial
      frequencies and that can lead to artifacts
      in the output of pfocusramp.  To avoid
      those artifacts, we recommend that you
      adjust one or both of the semi-convergence
      angle and detector MTF so that the modeled
      CTF approximates how the CTF of your
      microscope is damped at high spatial
      frequencies.

AmplitudeContrast
      The model of the CTF has a parameter, the
      amplitude contrast, for how much of the
      CTF is due to scattering or absorption
      of the electron beam.  The amplitude
      contrast should have a value between
      zero and one, inclusive.  Commonly used
      values of the amplitude contrast are 0.07
      for cryo samples and 0.15 for negatively-
      stained samples.

      From the graphical user interface, enter
      the value for the amplitude contrast in
      the field labeled "Amplitude contrast".
      On the command line, include -amp=ac
      in the options to set the amplitude
      contrast to be ac.  If the options do
      not include -amp=, pfocusramp will
      assume that the amplitude contrast is 0.07.

Defocus
      The amount of defocus strongly affects
      the form of the CTF so the defocus is
      a key input parameter that you'll need
      to set.  pfocusramp expects the value
      of the defocus to be provided in units
      of microns and uses the convention
      that a negative value corresponds to
      an underfocus and a positive value to
      an overfocus.

      For computing how the defocus varies
      across an image with a nonzero tilt
      angle, pfocusramp assumes that the
      defocus parameter you supply correspond
      to the defocus near the center of the
      image (zero-based pixel coordinates,
      (floor(nx/2) - 1, floor(ny/2) - 1), to
      be precise).  At the pixel, (ix, iy), in
      zero-based indices, pfocusramp will add
      to the defocus amount

      p * sin(t) * dot_product(
          (ix - floor(nx/2) - 1, iy - floor(ny/2) - 1),
          (cos(a), sin(a))
      )

      where a is the tilt axis orientation
      angle, t is the tilt angle, and p is
      the pixel spacing.  In other words, if
      the tilt axis is vertical (a = 0), the
      tilt angle is positive, and the center
      of the image is underfocused, the points
      to the right of center will be less
      underfocused; points to the left of
      center will be more underfocused.  If
      the microscope is modeled as astigmatic,
      pfocusramp adds the same amount to both
      components of the defocus.  The
      astigmatism axis angle remains the same
      across the image.

      To specify the defocus from the graphical
      user interface, enter the defocus amount
      (in microns with negative values for an
      underfocus) in the field labeled "Defocus
      (major axis, um)".  If you do not want
      to model astigmatism in the microscope,
      make sure the adjacent toggle button
      labeled, "astigmatic", is off.  If you
      do want to model astigmatism, turn on
      that toggle button, and enter the amount
      of defocus (in microns with negative
      values for an underfocus) along the minor
      axis in the field labeled "Defocus (minor
      axis, um)" and the orientation angle
      (in degrees) for the major axis in the
      field labeled "Major axis angle (deg)".
      The orientation angle for the astigmatism
      major axis is specified relative to the
      unrotated image coordinates (the coordinates
      in which the tilt axis is oriented as
      specified in the alignment parameters) and
      is the amount of rotation needed to bring
      the formerly horizontal image axis parallel
      to the astigmatism major axis.  A positive
      value for the orientation angle implies a
      counterclockwise rotation of the image to
      bring the horizontal formerly horizontal
      axis parallel to the astigmatism major axis.

      On the command line, include -def=d1 ,
      -def=d1:d2 , or -def=d1:d2:ang in the
      options to set the defocus.  The first
      form assumes no astigmatism and sets the
      defocus to be d1 microns (negative values
      values indicate an underfocus).  The
      second form assumes astigmatism with the
      major axis horizontal (in the unrotated
      coordinate system) and a major axis
      defocus of d1 microns and a minor axis
      defocus of d2 microns.  The third form
      assumes astigmatism with a major axis
      oriented ang degrees from horizontal
      (in the unrotated coordinate system;
      a positive angle implies a counterclockwise
      rotation to bring the former horizontal
      parallel to the major axis), a major
      axis defocus of d1 microns and a minor
      axis defocus of d2 microns.

DetectorMTF
      The effect of the detector (for instance
      a CCD camera with a scintillator) on the
      transfer function is approximated with

      a1 * exp(-b1 * q^2) + a2 * exp(-b2 * q^2)

      that multiplies the other components of
      the transfer function.  q is the magnitude,
      in cycles/sample, of the spatial frequency.
      a1, b1, a2, and b2 are parameters that you
      supply.  From the graphical user interface,
      use the field labeled "Detector MTF" to
      set the values for the parameters; the four
      values in that field are a1, b1, a2, and b2,
      respectively.  On the command line, include
      -mtf=a1:b1:a2:b2 in the options to set the
      detector transfer function.  If the options
      do not include -mtf=, pfocusramp will use
      values corresponding to an ideal detector
      (a1 = 1, b1 = 0, a2 = 1, b2 = 0).

Operation
     pfocusramp will perform one of the following
     operations on the input images to generate
     the result:

     Inverse filter by the CTF
         Apply a Wiener filter to reverse the
         effects of the CTF.  From the graphical
         interface, you can choose to inverse
         filter by the CTF by selecting "Wiener
         filter CTF" from the options next to
         the "Operation" button.  On the command 
         line, include -op=wiener in the options
         to inverse filter by the CTF.

     Inverse filter by the CTF squared
         Apply a Wiener filter where the filter
         to be inverted is the CTF squared.
         From the graphical interface, you can
         choose to inverse filter by the CTF
         squared by selecting "Wiener filter
         CTF^2" from the options next to the
         "Operation" button.  On the command
         line, include -op=wiener2 in the 
         options to inverse filter by the CTF
         squared.

      Phase flip
          In the frequency domain, reverses
          the phases of the portions where the
          phases would be reversed because of
          the CTF.  From the graphical interface,
          you can choose to flip phases in the
          input by selecting "phase flip" from
          the options next to the "Operation"
          button.  On the command line, include
          -op=phaseflip in the options to flip
          phases in the input.

      apply CTF
          Applies the CTF to the input data.
          From the graphical interface, you
          can choose to apply the CTF to the
          input data by selecting "apply CTF"
          from the options next to the
          "Operation" button.  On the command
          line, include -op=apply in the
          options to apply the CTF to the
          input data.

      apply CTF squared
          Applies the square of the CTF to the 
          input data.  From the graphical
          interface, you can choose to apply
          the CTF squared to the input data by
          selecting "apply CTF^2" from the
          options next to the "Operation" button.
          On the command line, include -op=apply2
          in the options to apply the CTF squared
          to the input data.

      The inverse filtering options have an additional
      parameter, the Wiener parameter which affects
      the result.  When run from the command line and
      the options do not include -op=, pfocusramp will
      inverse filter by the CTF.

WienerParameter
      pfocusramp implements the inverse filter by the
      CTF or CTF squared as a simplified Wiener filter:

      result = IFT(FT(m)*conjugate(F)/(F*conjugate(F)) + c)

      where IFT is the inverse Fourier transform, FT(m)
      is the Fourier transform of the measurement,
      F is the CTF or CTF squared, and c is parameter
      to reduce the amplification effect of the inverse
      filter when the magnitude of the F is small.
      Values for c should be greater than or equal to
      zero.  Normally, you would use larger values of
      c for data that has lower signal to noise ratios.
      From the graphical user, you can specify the
      value for c by entering it in the field labeled
      "Wiener parameter".  On the command line, include
      -wf=c in the options to set the value of c.  If
      -wf= does not appear in the command-line options,
      pfocusramp will use a value of 0.2 for c.

StripeSize
      pfocusramp can perform its operations for multiple
      strips parallel to tilt axis to approximate how
      the CTF function varies across the image due to
      changes in the amount of defocus.  The stripe
      size sets the width, in pixels, of the stripe
      that is written to the output for each
      application of the filter (the width of the
      stripe needed to compute that output stripe
      may be larger and is affected by the filter
      size and orientation of the stripe to the
      image.  Values of the stripe size that are
      less than or equal to zero will cause
      pfocusramp to apply the filter once per
      image, i.e. to assume that the defocus does
      not vary across the image.

      From the graphical user interface, you can
      set the stripe size by entering the desired
      value, in pixels, in the field labeled
      "Stripe size".  On the command line, include
      -nxstripe=n in the options to set the stripe
      width to be n pixels.  If -nxstripe= is not
      included in the options, pfocusramp will
      apply the filter once per image.

Invert
      To better interoperate with the intensity
      scaling performed by APPL_PRM or the
      positivity constraint used by TAPIR,
      pfocusramp reverses the sign on the standard
      definition of the CTF, the Fourier transform
      of the difference between the observed image
      with a point sample and the observed image
      with no sample.  With that sign reversal,
      the mean of an output image will have the
      same sign as the mean of the input image
      from which it derived.  If you do not want
      pfocusramp to reverse the sign on the CTF,
      turn on the toggle button labeled "Invert"
      if you are using the graphical user
      interface or include -invert in the
      command-line options if you are running
      pfocusramp directly.  The sign chosen
      for the CTF does not matter in the cases
      where you inverse filter by the CTF
      squared or filter by the CTF squared.

Rotate
      pfocusramp can either assume that the
      tilt axis orientation in the input
      images is as given in the alignment
      parameters (either from the parameter
      file, the orientation you specified,
      or the extended header) or is along
      the vertical axis.  When run from the
      graphical user interface, pfocusramp
      uses the axis orientation as is when
      the toggle button, labeled "Rotate",
      is on and assumes the axis orientation
      is vertical when that toggle button
      is off.  When run from the command
      line, include -rotate in the options
      to have PFOCSURAMP use the axis
      orientation as is.  If -rotate does
      not appear in the options, pfocusramp
      will assume that the tilt axis is
      vertical.

      If you include astigmatism in the CTF
      and have pfocusramp assume that the
      tilt axis is vertical, pfocusramp will
      modify the astigmatism axis angle you
      supply because pfocusramp assumes the
      CTF parameters were measured in the
      coordinate system where the tilt axis
      orientation is as specified in the
      alignment parameters.

ReverseAxis
      The sign of the slope of the focus ramp
      across the image depends on the values
      of the tilt angle and tilt axis
      orientation for the image.  The Defocus
      topic provides the formula.  To make it
      easier to match your experimental
      conditions to that formula, pfocusramp
      provides an option to add 180 degrees
      to the tilt axis orientation for each
      image.  That has the effect of flipping
      the sign on the slope of the focus ramp.
      If you intend to reconstruct the data
      with one of Priism's reconstruction
      algorithms, you likely should reverse 
      the axis direction while generating
      the alignment parameters (the mass-
      normalization and alignment
      applications provide options to do
      that) and use those parameters as
      they are with pfocusamp and the
      generation of an aligned tilt series
      for reconstruction.  By doing so,
      you handle the tilt axis orientation
      in a consistent way for both CTF
      correction and the reconstruction.

      From the graphical interface, you can
      turn on the option to add 180 degrees
      to the tilt axis orientation by turning
      on the toggle button labeled "Reverse
      tilt axis".  To enable that option
      from the command line, include
      -revaxis in the options.

FilterSize
      The filter size sets the minimum width,
      in pixels measured perpendicular to the
      tilt axis orientation, for the arrays
      used to compute the contrast transfer
      function and result.  Note that the
      width of those arrays will be no smaller
      than the stripe size.  Depending on the
      CTF parameters and pixel size, the filter
      size may not be sufficient to accurately
      represent the CTF resulting in artifacts
      in the result.  In other cases, the
      filter size is more than enough to
      represent the CTF accurately, and you
      can speed up the processing by decreasing
      the value.  In terms of speed, filter
      sizes that are only divisible by small
      primes (say 2, 3, and 5) are likely to
      be better than a filter size that is
      slightly smaller but has one or more
      larger prime factors.

      From the graphical user interface, you
      can set the filter size by entering the
      desired value, in pixels, in the field
      labeled "Filter size".  That field is
      in the special parameters dialog.  On
      the command line, include -nxext=n
      in the options to set the filter
      size to be n pixels.

AxisOrientation
      If you do not provide an alignment
      parameter file, pfocusramp will read
      the tilt axis orientation from the
      extended header of the input.  You
      can override those values and use
      one orientation for all the input
      images.  To do so from the graphical
      user interface, turn off the toggle
      button labeled "default" on the line
      in the special parameters dialog
      that starts with the button labeled
      "Axis orientation (deg)".  Then
      enter the desired axis orientation,
      in degrees in the text field on that
      line.  On the command line, you can
      override the orientations from the
      extended header by including
      -axis=t in the options were t is
      the axis orientation, in degrees,
      to use.

      The Defocus topic describes the
      sign convention for the axis
      orientation and how it affects
      how the defocus varies across the
      image.  If you enable the option
      to reverse the tilt axis,
      pfocusramp will add 180 degrees
      to the tilt axis orientation
      regardless of whether that
      orientation comes from the
      alignment parameter file,
      extended header, or the value
      you set for the axis orientation.

TiltAngle
      If you do not provide an
      alignment parameter file, pfocusramp
      will read the tilt angles from the
      extended header of the input.  You
      can override those values and use
      one tilt angle for all the input
      images.  To do so from the graphical
      user interface, turn off the toggle
      button labeled "default" on the line
      in the special parameters dialog that
      starts with the button labeled "Tilt
      angle (deg)".  Then enter the desired
      tilt angle, in degrees, in the text
      field on that line.  On the command
      line, you can override the tilt angles
      from the extended header by including
      -tilt=t in the options were t is the
      tilt angle, in degrees, to use.

      The defocus topic describes the sign
      convention for the tilt angle and how
      it affects how the defocus varies
      across the image.

PixelSize
      pfocusramp normally reads the pixel
      size in Angstroms for the image data
      from the input file's header.  From
      the graphical interface, you can
      override that value by turning off
      the toggle button labeled "default"
      on the line in the special parameters
      dialog that starts with the button
      labeled "Pixel size (angstroms)".
      Then enter the desired pixel size,
      in Angstroms, in the text field on
      that line.  On the command line,
      you can override the header's value
      for the pixel spacing by including
      -pix=p in the options where p is
      the pixel size in Angstroms.  The
      pixel size you specify is for the
      highest resolution images in the
      input file.  If you select a lower
      resolution>, the pixel size you gave
      will be multiplied by the downsampling
      factor for the selected resolution.

PointSource
      As a convenient diagnostic or method
      for visualizing the point response
      of the pfocusramp's filtering,
      pfocusramp can generate the effect
      of its filtering on a point source.
      pfocusramp still requires an input
      file for that, but it only uses
      the file's dimensions, pixel spacing
      and tilt geometry.  The image values
      are not used; instead, all pixels
      are treated as if they were zero
      except for the one at (floor((nx-1)/2),
      floor((ny-1)/2)) (in zero-based
      indices) which is treated as if it
      had a value of 1000.

      From the graphical user interface,
      you can replace the input with a point
      source by turning on the toggle button
      labeled "Point source".  That toggle
      button is in the special parameters
      dialog.  On the command line, include
      -point on the option to replace the
      input with a point source.

Resolution
      The resolution parameter selects
      which resolution to process from the
      input tilt series.  0 is the highest
      (full) resolution.  From the graphical
      user interface, you would normally
      select the resolution from the main
      EMTAR dialog and allow the software
      to propagate the setting to the
      individual processing stages.  You
      can also set the resolution to
      process specifically for pfocusramp
      in its special parameters dialog:
      enter the desired resolution index
      in the field labeled "Resolution".
      On the command line, include
      -ires=j in the options to set j
      as the resolution index to
      process.  If the options do not
      include -ires=, pfocusramp will
      process the highest resolution
      in the input file.

Multires
      pfocusramp will add lower resolution
      versions of the result to the output
      file if you want and the dimensions
      are sufficiently large.  From the
      graphical user interface, turn on
      the toggle button labeled "Add
      multires" (in the special parameters
      dialog) to have pfocusramp had lower
      resolutions to the output if the x
      and y dimensions are sufficiently
      large.  When that toggle button is
      off, the result will not have lower
      resolutions appended.  On the
      command line, include -multires
      in the options to add lower
      resolutions to the result when
      the dimensions are large enough.
      If -multires does not appear in
      the options, the result will not
      contain multiple resolutions.

SectionRange
      pfocusramp can limit its processing
      to a subset (specified by a starting
      index, final index, and an increment)
      of the images in the input file.
      From the graphical interface, you can
      define the subset to process in the
      special parameters dialog.  In the
      field labeled, "Section range", the
      first value is starting index
      (numbered from zero), the second value
      is the final index (also numbered from
      zero), and the third value is the index
      increment.  On the command line, include
      -iv=istart:iend:istep in the options to
      process the subset starting with the
      zero-based index, istart, ending with
      the zero-based index,iend, and with an
      increment of istep between the images
      included.  If -iv= does not appear in
      the options, pfocusramp will process
      all the images from the input file.

CommandLine
      You can invoke pfocusramp from the
      command line.  The application does
      require libraries from Priism so you
      should set the Priism environment prior
      to running pfocusramp.  If there are no
      arguments that start with -names=, then
      the first two arguments that do not
      start with "-" will be be taken as the
      file names for the inputs tilt series
      and the result tilt series, respectively.
      Any additional arguments that do not
      start with "-" are ignored.  If there
      is only one argument which does not start
      with "-", pfocusramp uses it as the file
      name for the input tilt series and reads
      the name of the result tilt series from
      standard input.  If there are no
      arguments which start with "-", pfocusramp
      reads the names of the input tilt series
      and result series, in that order, from
      standard input.  If there is at least one
      argument that starts with -names, any
      arguments that do not start with "-"
      are ignored.

      The options that pfocusramp accepts are
      listed below; all other options are ignored.
      If an option appears multiple times, the
      first one takes precedence.

      -amp=m
          Sets the amplitude contrast to be m, a
          floating point value that should be
          between zero and one inclusive.  When
          not set, pfocusramp sets the amplitude
          contrast to be 0.07.

      -axis=ang
          Causes pfocusramp to use ang as the tilt
          axis orientation angle, in degrees, for
          any image whose tilt axis orientation
          can not be extracted from the alignment
          parameter file.  ang must be a floating-
          point value.  When not set, the tilt
          axis orientation from the extended header
          or a value of zero, if the tilt axis
          orientation is not available in the
          extended header, will be used for the
          images without tilt axis orientation
          information in the alignment parameter
          file.  If you use -revaxis, pfocusramp
          will add 180 degrees to the value you
          set with -axis.

      -bin=m
          Causes pfocusramp to bin the input image
          by a factor of m in x and y before
          proceeding. nbin must be an integer and
          should be positive.  When not set,
          pfocusramp does not bin the input
          images.

      -cs=c
          Sets the spherical aberration to be c
          millimeters.  c must be a floating-
          point value.  When not set, pfocusramp
          sets the spherical aberration to be 2.2
          millimeters.

      -def=d1:d2:aa
          Sets the defocus.  d1 is the defocus
          along the major axis in units of microns
          with negative values indicating an
          underfocus.  d2 is the defocus
          perpendicular to the major axis in units
          of microns with negative values
          indicating an underfocus.  aa is the
          angle, in degrees, between horizontal
          (in the unrotated coordinates) and the
          major axis.  A positive value for aa
          means that a counterclockwise rotation
          of the image is necessary to make the
          former horizontal axis parallel to the
          major axis.  d1, d2, and aa must be
          floating-point values.  You may omit
          aa:  pfocusramp will assume that the
          major axis is horizontal.  You may
          omit d2 and aa:  pfocusramp will
          assume that there is no astigmatism,
          i.e. that d2 is equal to d1.  When
          not set, pfocusramp will attempt to
          read the defocus information from
          the extended header.  With the header
          entries indexed from zero, the major
          axis defous in microns will be .001 *
          (header entry 13 - 0.5 * header entry
          14), the minor axis defocus in microns
          will be .001 * (header entry 13 +
          0.5 * header entry 14), and the major
          axis angle in degrees will be header
          entry 15 * 180 / pi.  Note that UCSF
          Tomography sets those header entries
          to zero.  If the defocus information
          is not available from the extended
          header, pfocusramp will assume that
          the system is not astigmatic and
          the defocus is zero microns.

      -dirin=dir
          Causes pfocusramp to prepend dir to
          all file names read from the file
          specified with -names.  When not
          set, pfocusramp does not prepend
          anything to those file names.  This
          option has no effect when you do not
          use -names.

      -dirout=dir
          Causes pfocusramp to prepend dir to
          all output file names when input files
          are read from the file set with -names.
          When not set and you use -names,
          pfocusramp writes the output files in
          the same directory as the input files.
          This option has no effect when you do
          not use -names.

      -invert
          Causes pfocusramp to use the standard
          definition of the CTF, the Fourier
          transform of the difference between the
          image with a point sample and an image
          without a sample.  When not set,
          pfocusramp uses the negative of that
          definition so that the mean of the
          result has the same sign as the mean
          of the input.

      -iprmfile=nm
          Causes pfocusramp to use the alignment 
          parameter file named, nm, as the first
          source for tilt angles and tilt axis
          orientations.  If nm is empty or equal
          to "none", pfocusramp will assume that
          there is no alignment parameter file.
          For images without alignment information
          in the parameter file or when no
          alignment parameter file has been
          specified, pfocusramp will use (in order
          of precedence): the tilt angle specified
          by -tilt= and the tilt axis orientation
          specified by -axis=, the values from the
          extended header of the input file, or the
          default values of zero degrees for both
          angles.

      -iv=ivs:ive:ivi
          Causes pfocusramp to process only the
          images with indices between ivs and ive
          with an increment of ivi.  ivs, ive, and
          ivi must be integers.  The indices are
          numbered from zero.  When not set,
          pfocusramp processes all images from the
          input file.

      -kv=v
          Sets the acceleration voltage to be v
          kilovolts.  v must be a floating-point
          value and should be positive.  If v is
          larger than 10000, pfocusramp assumes the
          value was mistakenly supplied in units of
          volts and divides the value by 1000 before
          using it.  When not set, pfocusramp sets
          the acceleration voltage to be 300
          kilovolts.

      -mtf
          This is a shortcut for
          -mtf=.44647:55.166:.42259:9.7247 where
          the values are a fit to the measured MTF
          of the Ultracam (operating unbinned)
          attached to UCSF's Polara operating
          at an acceleration voltage of 300
          kilovolts.

      -mtf=a1:b1:a2:b2
          Sets the detector MTF.  a1, b1, a2,
          and b2 must be floating-point
          values.  When not set, pfocusramp uses
          an ideal detector, equivalent to
          a1 = 1, b1 = 0, a2 = 1, and b2 = 0.

      -multires
          Causes pfocusramp to add lower
          resolutions to the result if the
          images are sufficiently large.  If
          not set, the result will be
          generated without extra resolutions.

      -names=nm
          Causes pfocusramp to read the input
          file names and defocus parameters
          from the file named, nm.  Input file
          names will be prepended with whatever
          has been set with -dirin.  Output
          files will appear in the same directory
          as the input files unless -dirout has
          been set.  The file name portion of
          the output file name will be the same
          as the input file but with an appended 
          part to indicate the type of processing
          done: _dff (phase-flipped), _dfc
          (inverse CTF), _dfm (inverse CTF and
          detector MTF), _dc2 (inverse CTF
          squared), _dm2 (invearse CTF and
          detector MTF squared), _ctf (CTF and
          detector MTF, if set, applied),
          _ctf2 (CTF and detector MTF, if set,
          applied).  nm should be in the ACE
          format with one line per input file,
          and nine items per line: image
          filename, nominal defocus, rough defocus
          estimate, refined defocus 1 (major axis),
          refined defocus 2 (minor axis), estimated
          amplitude contrast ratio, astigmatism
          ratio, astigmatism angle, confidence
          level for result.  pfocusramp only makes
          use of the first, fourth, fifth, and eighth
          entries.  The fourth and fifth values are
          assumed to have units of microns and
          negative values correspond to an underfocus.
          The eighth value is assumed to have units of
          degrees and the opposite sign convention
          from that for pfocusramp's major axis
          orientation.

      -nxext=n
          Causes pfocusramp to use a filter size of
          n pixels.  n must be an integer.  When not
          set, pfocusramp uses a filter size of 512
          pixels.

      -nxstripe=n
          Causes pfocusramp to use a stripe size of
          n pixels.  n must be an integer.  When not
          set, pfocusramp processes an entire input
          image at once and does not allow the defocus
          to vary across the image.

      -op=p
          Specifies the type of filtering that
          pfocusramp should perform. p must be wiener,
          wiener2, phaseflip, apply, or apply2.  If
          not set, pfocusramp applies a Wiener filter
          for CTF, i.e. equivalent to -op=wiener.

      -pix=p
          Causes pfocusramp to assume that the pixel
          spacing is p Angstroms.  p must be a
          floating-point value and should be positive.
          When not set, pfocusramp uses the x pixel
          spacing from the input file's header.

      -point
          Causes pfocusramp to ignore the image
          values in the input data and use an image
          of the same size but with all zeros except
          for a centrally located pixel with a value
          of one thousand.

      -res=ir
          Causes pfocusramp to process the resolution
          index, ir, where zero is the highest
          resolution.  ir must be an integer.  When
          not set, pfocusramp processes the highest
          resolution.

      -revaxis
          Causes pfocusramp to add 180 degrees to
          each image's tilt axis orientation.

      -rotate
          Causes pfocusramp to assume that the tilt
          axis orientation is as specified by the
          alignment parameter file, -axis=, or the
          extended header information.  Otherwise,
          pfocusramp assumes that the tilt axis is
          vertical in the input images.

      -semiconv=s
          Sets the semi-convergence angle of the
          electron beam to be s milliradians.  s
          must be a floating-point value and
          should be non-negative.  When not set,
          pfocusramp sets the semi-convergence
          angle to be zero milliradians.

      -tilt=ang
          Causes pfocusramp to use ang as the tilt
          angle, in degrees, for any image whose
          tilt angle can not be extracted from the
          alignment parameter file.  ang must be a
          floating-point value.  When not set, the
          tilt angle from the extended header or a
          value of zero, if the tilt angle is not
          available in the extended header, will
          be used for the images without tilt angle
          information in the alignment parameter file.

      -wf=p
          Sets the Wiener filter parameter to be
          p.  p must be a floating-point value and
          should be greater than or equal to zero.
          If not set, pfocusramp sets the Wiener
          filter parameter to be 0.2.

      -xfix=ixs:ixe:iy...
          Causes pfocusramp to interpolate out
          horizontal lines in the input.  You may
          specify up to 10 such lines with three
          values for each line:  the first x index
          (ixs) to interpolate, the last x index
          to interpolate (ixe), and the y index
          (iy) of the line.  All indices start
          from zero and must be integers.  When
          not set, pfocusramp does not interpolate
          out horizontal lines in the input.

      -yfix=iys:iye:ix...
          Causes pfocusramp to interpolate out
          vertical lines in the input.  You may
          specify up to 10 such lines with three
          values for each line:  the first y index
          (iys) to interpolate, the last y index
          to interpolate (iye), and the x index
          (ix) of the line.  All indices start
          from zero and must be integers.  When
          not set, pfocusramp does not interpolate
          out vertical lines in the input.
