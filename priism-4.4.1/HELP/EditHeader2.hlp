KEYWORD
    BaselineFields ExtensionFields Labels Defaults NumberOfColumns
    StartColumn ColumnMapping NumberOfRows StartRow RowMapping
    NumberOfSections StartSection SectionMapping DataType
    NumberOfXIntervals XLength XSpacing NumberOfYIntervals
    YLength YSpacing NumberOfZIntervals ZLength ZSpacing
    AxesAngles IntensityStatistics SpaceGroup ExtendedHeaderSize
    Image2000Origin Image2000RMS CCP4SkewFlag CCP4SkewMatrix
    CCP4SkewTranslation CCP4RMS PriismOrigin PriismTiltAngles
    PriismNTimes PriismStartTime PriismNWavelengths
    PriismWavelengths PriismInterleaving PriismIntensityStatistics
    PriismNResolutions PriismZFactor PriismExtendedHeader
    PriismImageType PriismLensNumber PriismCreatorID PriismRMS

DESCRIPTION
    EditHeader2 is similar to Priism's EditHeader but allows
    working with the headers of files that use other variants
    of the MRC file format, include Image 2000 and CCP4 files.

    The EditHeader2 dialog consists of two main parts.  Along
    the top is a menu bar for invoking the available operations.
    The body of the dialog displays the values in the header,
    with the exception of the labels, common to all MRC
    variants.  You can change those values as you wish.  To
    learn more about the header fields displayed, consult the
    BaselineFields topic.

    The operations available in the menu bar are:

    File
        Open...
            Selects a new file to work with.

        Save
            Saves the header and extended header to the
            currently selected file.

        Exit
            Closes EditHeader2.

    View
        Extension fields...
            For the currently selected MRC variant (set by
            the "Extension format" menu entry in this menu),
            displays the header parts that are specific to
            that format.

        Labels...
            Displays the number of labels and the labels
            from the MRC header.  The Labels topic describes
            the details.

        Extension format
            Selects how to interpret the parts of the
            header that vary between the variants for
            the MRC format.

    Log
        View...
            Displays messages generated when reading a new
            file or saving the header.

        Clear
            Clears the accumulated messages in the log.

        Save as text...
            Writes the accumulated messages in the log as a
            text file.

    Configure
        Set defaults...
            Modifies the assumptions that EditHeader2 makes
            when reading a file or generating a new header
            from scratch.  The "Defaults" topic describes
            the details.

        Save
            Saves the default settings so they will be used
            when you run EditHeader2 in the future.

    Help
        Overview...
            Displays this documentation.

BaselineFields
    EditHeader2 displays the values from the MRC header
    common to all variants within EditHeader2's main
    dialog (the one exception is the labels and number
    of labels; to see those, use the "Labels..." option
    from the View menu).

    The topics labeled NumberOfColums, StartColumn,
    ColumnMapping, NumberOfRows, StartRow, RowMapping,
    NumberOfSections, StartSection, SectionMapping,
    DataType, NumberOfXIntervals, XLength, XSpacing,
    NumberOfYIntervals, YLength, YSpacing,
    NumberOfZIntervals, ZLength, ZSpacing, AxesAngles,
    IntensityStatistics, SpaceGroup, and
    ExtendedHeaderSize briefly describe the
    different fields common to the different MRC
    variants.

ExtensionFields
    To view the portions of the header that vary
    between the different variants of the MRC format,
    use the "Extension fields..." option in the View
    menu of EditHeader2's main dialog.  EditHeader2
    displays those portions of the header according
    to the format you've selected in the "Extension
    format" option of the View menu.

    For the Image 2000 format, the additional
    header fields are described by the Image2000Origin
    and Image2000RMS topics.   For the CCP4 format,
    the additional header fields are briefly described
    by the CCP4SkewFlag, CCP4SkewMatrix,
    CCP4SkewTranslation, and CCP4RMS topics.

Labels
    To display the number of labels and the contents
    of the labels from the header, select the
    "Labels..." option from the View menu in
    EditHeader2's main dialog.  That will open a
    dialog with the number of labels shown at the
    top, and the contents of the 10 labels displayed
    one per line below that.  For the display of the
    labels, EditHeader2 converts any non-printable
    character to a backslash followed by three digits
    where the three digits are the character's value
    as an unsigned decimal value.  EditHeader2 also
    converts any backslash to two backslashes.

    Use the "Shift up..." button at the bottom of
    the dialog to shift the contents of the labels
    to increasing label number (i.e. move the
    contents of label nine to label ten, label eight
    to label nine, ...) and use the "Shift down..."
    button at the bottom of the dialog to shift the
    contents of the labels to decreasing label number
    (i.e. more the contents of label two to label one,
    label three to label two, ...).  Either button
    displays a dialog where you can enter which labels
    are shifted and the size of the shift.

Defaults
    Because it is not always possible to distinguish
    different variants of the MRC format, EditHeader2
    makes assumptions about the format when it opens
    a file.  To change the assumptions that EditHeader2
    will make when opening files, use the "Set
    defaults..." option from the Configure menu in
    EditHeader2's main dialog.  Also use that option
    to change how EditHeader2 detects the ordering
    of bytes in 2- and 4- byte quantities in the
    header and the format EditHeader2 uses for new
    headers.

    One key factor affecting EditHeader2's assumptions
    about an existing file is the 53rd 4-byte word of
    the file (where the first word in the file is
    numbered one).  The Image2000, CCP4, and Priism
    (EM) formats put "MAP " in that word.  The Priism
    format does not.

    The "Set defaults" option opens a new dialog
    which displays the current set of defaults.  You
    can edit those values.  To apply the changes,
    press the "Apply" button at the bottom of the
    dialog.  Pressing the "Close" button at the
    bottom of the dialog will discard any changes
    and close the dialog.  If you want EditHeader2
    to make the same assumptions when you run it in
    the future, use the "Save" option from the
    Configure menu in EditHeader2's main dialog.

    The controls at the top of the defaults dialog
    control how EditHeader2 detects the ordering of
    multibyte quantities when it opens a file.  If
    the file does not have the characters "MAP " in
    the 53rd 4-byte word of the file, EditHeader2
    chooses the byte ordering depending on how you set
    the "without MAP field" menu.  The available
    options are:

       big endian
           Always assume the file is big endian.  That
           is the native byte ordering for IRIX systems
           and Mac OS X systems with PowerPC processors.

       little endian
           Always assume the file is little endian.
           That is the native byte ordering for systems
           with Intel or AMD Athlon processors.

       autodetect
           If the number of columns (the first 4-byte
           word in the file) and the number of rows
           (the second 4-byte word in the file) are
           either negative or greater than 65535 when
           not byte-swapped, assume that all the
           header entries must be byte-swapped;
           otherwise, assume the header does not
           require byte-swapping.

    If the file does have the characters "MAP " in
    the 53rd 4-byte word of the file, EditHeader2
    chooses the byte ordering depending on how you
    set the "with MAP field" menu.  The options are
    the same as above, but the autodetection algorithm
    works differently.  When autodetecting the byte
    order, EditHeader2 will first look at the first
    byte of the 54th word in the header and assume
    the file is big endian if that byte is 17 or
    little endian if that byte is 68.  For any other
    value in that byte, EditHeader2 will apply
    the autodetection algorithm for files without
    "MAP " in the header.

    The controls at the bottom of the defaults dialog
    control how EditHeader2 interprets the values in
    the header which are not in common to all variants
    of the MRC format.  The menu labeled "new files"
    controls how EditHeader2 initializes those values
    when generating a new header.  The menu labeled
    "old files without MAP field" controls how
    EditHeader2 interprets existing files without
    "MAP " in the 53rd 4-byte word of the file.  The
    menu labeled "old files with MAP field" controls
    how EditHeader2 interprets existing files with
    "MAP " in the 53rd 4-byte word of the file.  For
    all three, the available options are:

        Baseline
            Assume nothing about the 25th through
            55th four-byte words in the header.
            When creating a new header, fill those
            values with zeroes.

        Image2000
            Assume the header of the file is laid
            out as described at
            http://www2.mrc-lmb.cam.ac.uk/image2000.html

        CCP4
            Assume the header of the file is laid
            out as described at
            http://www.ccp4.ac.uk/dist/html/maplib.html

        Priism
            Assume the header of the file is laid
            out as described at
            http://msg.ucsf.edu/IVE/IVE4_HTML/priism_mrc_header.html

        Priism (EM)
            Assume the header of the file is laid
            out as described at
            http://msg.ucsf.edu/IVE/IVE4_HTML/em_mrc_header.html

NumberOfColumns
    Is the number of elements along the fastest-varying
    (i.e. stored adjacent to each other in the file)
    dimension of the data set.

StartColumn
    Relates the data set stored in the file to a larger
    data set; this is the column index within the larger
    data set for the first column stored in this file.

ColumnMapping
    Specifies which spatial axis (X, Y, or Z) corresponds
    to moving from column to column in the file.  If the
    value in the field is one of the expected values
    (1, 2, or 3), the menu displays the axis name;
    otherwise, the menu will show "Nonstandard".  The
    field adjacent to the menu displays the actual value
    from the header.

NumberOfRows
    Is the number of elements along the second fastest-
    varying dimension of the data set.

StartRow
    Relates the data set stored in the file to a larger
    data set; this is the row index within the larger
    data set for the first row stored in this file.

RowMapping
    Specifies which spatial axis (X, Y, or Z) corresponds
    to moving from row to row in the file.  If the
    value in the field is one of the expected values
    (1, 2, or 3), the menu displays the axis name;
    otherwise, the menu will show "Nonstandard".  The
    field adjacent to the menu displays the actual value
    from the header.

NumberOfSections
    Is the number of elements along the slowest-varying
    dimension of the data set.

StartSection
    Relates the data set stored in the file to a larger
    data set; this is the section index within the
    larger data set for the first section stored in
    this file.

SectionMapping
    Specifies which spatial axis (X, Y, or Z) corresponds
    to moving from section to section in the file.  If
    the value in the field is one of the expected values
    (1, 2, or 3), the menu displays the axis name;
    otherwise, the menu will show "Nonstandard".  The
    field adjacent to the menu displays the actual value
    from the header.

DataType
    Indicates how each element of the data set is stored
    within the file.  If the format corresponds to one
    of the formats EditHeader2 recognizes, the menu
    lists the name of the format.  For unrecognized
    formats, EditHeader2 will display "Nonstandard"
    in the menu.  EditHeader2 uses the field next to
    the menu to display  the numeric code used in the
    header to represent the data type.

NumberOfXIntervals
    Displays the number of intervals along the x
    spatial dimension.

XLength
    Displays the cell dimension in the x dimension.

XSpacing
    Displays the cell dimension in the x dimension
    divided by the number of intervals in the x
    dimension.  The spacing is a derived quantity
    that is not directly stored in the header.
    When you adjust the spacing, EditHeader2
    will adjust the cell dimension while leaving
    the number of intervals constant.  When the
    number of intervals is zero, EditHeader2
    disables the spacing field.

NumberOfYIntervals
    Displays the number of intervals along the y
    spatial dimension.

YLength
    Displays the cell dimension in the y dimension.

YSpacing
    Displays the cell dimension in the y dimension
    divided by the number of intervals in the y
    dimension.  The spacing is a derived quantity
    that is not directly stored in the header.
    When you adjust the spacing, EditHeader2
    will adjust the cell dimension while leaving
    the number of intervals constant.  When the
    number of intervals is zero, EditHeader2
    disables the spacing field.


NumberOfZIntervals
    Displays the number of intervals along the z
    spatial dimension.

ZLength
    Displays the cell dimension in the y dimension.

ZSpacing
    Displays the cell dimension in the z dimension
    divided by the number of intervals in the z
    dimension.  The spacing is a derived quantity
    that is not directly stored in the header.
    When you adjust the spacing, EditHeader2
    will adjust the cell dimension while leaving
    the number of intervals constant.  When the
    number of intervals is zero, EditHeader2
    disables the spacing field.

AxesAngles
    Display the angles (in degrees, by convention)
    between the axes of the unit cell.

IntensityStatistics
    Displays the minimum, maximum, and average
    element values for the data set, as recorded
    in the header.

SpaceGroup
    Displays the space group number recorded in
    the header.

ExtendedHeaderSize
    Displays the number of bytes of extended header
    that immediately follows the 1024-byte fixed
    header in the file.

Image2000Origin
    Displays the x, y, and z coordinates for the
    origin of the data set.

Image2000RMS
    Displays the root mean square deviation from the
    mean intensity of the data set, as recorded in
    the header.

CCP4SkewFlag
    Indicates whether a skew transformation is
    specified by the header (a nonzero value) or
    not (a zero value).  EditHeader will display
    the toggle button in an on state when the
    skew transformation is included.  EditHeader2
    displays the actual value from the header
    in the adjacent text field.

CCP4SkewMatrix
    Displays the 3 x 3 transform matrix for the
    skew transformation.  The first row are, from
    left to right, the s11, s12, and s13 components
    of the matrix.  The second row are, from left
    to right, the s21, s22, and s23 components.
    The third row are, from left to right, the s31,
    s23, and s33 components.

CCP4SkewTranslation
    Displays the three components of the translation
    vector for the skew transformation.

CCP4RMS
    Displays the root mean square deviation from the
    mean intensity of the data set, as recorded in the
    header.

PriismOrigin
    Displays the three components (x, y, z) of a
    translation vector to relate the data set
    coordinates to another frame of reference.

PriismTiltAngles
    Displays the three rotation angles (about x, y,
    and z; by convention, measured in degrees) to
    relate the data set coordinates to another
    frame of reference.

PriismNTimes
    Displays the number of time points included
    in the file.  Only used by the original
    Priism format.

PriismStartTime
    Relates the time points stored in the file to
    a longer time series.  The value shown in this
    fields is the time point index within the longer
    time series for the first time point stored in
    the file.

PriismNWavelengths
    Displays the number of wavelengths included in
    the file.  Only used by the origin Priism format.

PriismWavelengths
    Displays the wavelengths (in nanometers, by
    convention) for each of the wavelengths in
    the file.  The header has space to store
    the wavelengths for up to five wavelengths.
    Only used by the original Priism format.

PriismInterleaving
    Displays the storage order of z, wavelength,
    and time within the file.  There are three
    recognized options, ZTW (z varies fastest,
    time varies second fastest, and wavelength
    varies slowest), WZT (wavelength varies
    fastest, z varies second fastest, and time
    varies slowest), or ZWT (z varies fastest,
    wavelength varies second fastest, and time
    varies slowest).  If the value in the header
    is an unrecognized value, EditHeader2 will
    display "Other" in the menu.  EditHeader2
    displays the actual value from the header
    in the text field adjacent to the menu.
    Only used by the original Priism format.

PriismIntensityStatistics
    Displays the minimum and maximum intensity
    in each wavelength other than the first
    (the statistics for the first wavelength
    use the standard MRC fields in the header
    for intensity statistics), as recorded in
    the header.  The header has space to store
    the statistics for up to five wavelengths.
    Only used by the original Priism format.

PriismNResolutions
    Displays the total number of resolutions
    (different versions of the data) present
    in the file.

PriismZFactor
    Displays the downsampling factor used in
    the z dimension applied to each lower
    resolution data set.

PriismExtendedHeader
    For non-crystallographic data, the Priism
    extended header (if present) contains a
    set of integer and floating-point attributes
    for each section of data.  The number of
    integer parameters and floating-point
    parameters per section is displayed here.

PriismImageType
    The Priism header has a field to indicate
    how the data should be interpreted and four
    fields (two integers and two fixed point
    values) for attributes of the data.  If
    the image type indicated in the header is
    recognized by EditHeader2, it will display
    a correspond name in the menu next to the
    "Image type" button; otherwise, EditHeader2
    will display "Other" in that menu.  EditHeader2
    will display the numeric code for the image
    type in the text field adjacent to the menu.

PriismLensNumber
    Displays the identification number for the
    lens used when collecting the data.

PriismCreatorID
    Displays the identification tag for the data
    collection or processing software that generated
    the data set.  Only used by the original Priism
    format.

PriismRMS
    Displays the value stored in the header for the
    root mean squared deviation from the mean of
    the data set.  Only used by the EM variant of
    the Priism format.
