KEYWORD
    border ptdist

DESCRIPTION FindPoints Polygons
    FindPoints Polygons is similar to 2D Object Finder.  It
    segments image data by assuming that pixels with zero
    intensity are not part of the features of interest and that
    the parts with positive intensity are.  The edges of the
    features of interest are then traced and recorded as
    polygonal cross-sections.  FindPoints Polygons has two
    additional capabilities:

      1) FindPoints Polygons can work with the mask files
         generated by Find Points or Region Growing, which
         label separate regions with different values and use
         zero for points which are not in any region.  Turn on
         the "Separate by mask" toggle when working with these
         files (unless you do want to lump together everything
         that is not background).

      2) FindPoints Polygons will associate the polygonal
         cross-sections into 3D structures without the need to
         run the stand-alone application, Volume Builder.
         Volume Builder may still be useful for editing how the
         cross-sections are associated, taking measurements of
         the 3D structures, or to convert the 3D structures
         into a form that can be used in 3D Model or Clouds.
         Find Points and SurfHarmMod are two applications that
         can utilize the polygons and cross-section associations.

    FindPoints Polygons' user interface uses the same set of
    controls for selecting and processing a region as other
    Priism applications; consult Region.hlp for more information.
    There are additional controls to enter the name of the
    polygon (.Pol) file and the name of cross-section
    association (.Vol) file.  The "exclude edge objs" toggle
    and "edge size" field control how objects which intersect
    the edges of an image are handled; these controls can be
    useful as a workaround for edge artifacts in the input
    images.  The coarseness of the polygonal cross-sections,
    which has a strong effect on the time needed to manipulate
    the polygons in other programs, is set from the "dist
    between pts" field.  If the input is to be treated as a
    binary mask (a positive value marks the pixels in the
    object of interest and a value of zero marks the pixels
    outside that object), then turn the "Separate by mask"
    toggle off.  If the input has different regions marked
    by different positive values and you want to distinguish
    those regions in the output, turn the "Separate by mask"
    toggle on.

    FPPolygons accepts the command-line arguments described
    in Region.hlp.  In addition, it has the following options:

    -binary
        Forces FPPolygons to treat the data as binary data:
        all positive values are grouped into the same object.

    -border=n
        Sets the number of pixels, n, along each edge that
        FPPolygons excludes from segmentation.  n must be
        a positive integer.  By default, FPPolygons excludes
        a one pixel wide border around the edge of the image.

    -exclude_edge
        If specified, FPPolygons filters out any polygons
        that have a vertex within n+1 pixels of the sides
        of the image where n is the border size set with
        -border.

    -poly=name
        Causes FPPolygons to generate a file named name
        to store the polygon results.  If you do not use
        this option, FPPolygons does not save the polygons.

    -spacing=s
        Sets the distance between adjacent polygon vertices
        to be s pixels.  By default, FPPolygons will generate
        polygon vertices spaced four pixels apart.

    -vol=name
        Causes FPPolygons to generate a file named name
        to store the information about how to link the
        polygons outlines to form volumes.  If you do not
        use this option, FPPolygons does not save the
        connectivity information.

    The following example segments the contents of window 2
    and saves the polygons in /var/tmp/2.pol and the object
    connectivity information in /var/tmp/2.bld:

        FPPolygons 2 -poly=/var/tmp/2.pol -vol=/var/tmp/2.bld

border
    FPPolygons does not segment the points that are within
    n pixels of the sides of the image where n is the value
    in the "edge size" field.  If the "exclude edge objs"
    toggle is on, FPPolygons filters out any polygons that
    have one or more vertices within n + 1 pixels of the
    sides of the image.

ptdist
    Adjacent points in the polygonal cross-sections are
    separated by the distance, in pixels, from the "dist
    between pts" field.  Using a a larger value gives
    coarser polygons but decreases the computational and
    drawing effort for programs that will use the polygons.
