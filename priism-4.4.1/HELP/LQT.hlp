KEYWORD
    FrameRate Compression

DESCRIPTION
    On Linux systems, a plugin is available to save data as
    QuickTime movies.  The plugin uses libquicktime.
    Priism includes a fairly generic version of the
    libquicktime library; to use another version, make sure
    the other version is in the shared library path before
    the Priism library path and set the environment
    variable IVE_NO_INTERNAL_LQT before sourcing the script
    that sets the Priism environment.

    When Image Capture is run from the command line on Linux,
    you can use

        -format=qt

    as an option to Image Capture to have it generate a
    QuickTime movie.  To further control the output, you
    can append any of the following to the -format=qt
    option (when appending first insert a comma:  i.e.

        -format=qt,frate=5,compress=png

    ):

    frate=frames_per_second
        Sets the suggested playback rate; frames_per_second
        can be any value between 0.25 and 99.  When you do
        not set the playback rate, the playback rate for the
        generated movie will be 15 frames per second.

    compress=algorithm_name
        Sets the compression algorithm to use.  algorithm_name
        should be the short name for one of the compression
        schemes libquicktime supports.  Some of the common
        ones are:

        raw
            Generate uncompressed RGB.  For compatibility with
            previous plugins to generate QuickTime movies on
            Linux, you can also use none instead of raw as the
            algorithm name.

        png
            Independently compress each frame using the PNG
            algorithm which is lossless.

        jpeg
            Independently compress each frame using the JPEG
            algorithm.

        mjpa
            Use the Motion JPEG A compression scheme.  For
            compatibility with previous plugins to generate
            QuickTime movies on Linux, you can also use mjpega
            mjpa as the algorithm name.

    There are also options to control the parameters for a
    particular compression algorithm.  One way to determine
    what they are is to set up the compression parameters
    in Image Capture's user interface and then use the
    "Create batch job..." option from the "Options" menu
    at the bottom right of Image Capture's dialog to write
    out a script with the command-line equivalents to what
    you had specified in the user interface.

FrameRate
    Use the frame rate option to specify the number of frames
    per second for the generated movie.

Compression
    The available compression schemes depend on which
    libquicktime library you use and how that library
    was configured.  The commonly used compression
    schemes in the libquicktime included with Priism are:

        RGB uncompressed
            The generated movie is not compressed.

        PNG
            Uses the lossless compression algorithm from the
            Portable Network Graphics format to compress each
            frame.  This compression scheme has one adjustable
            parameter, the compression level, which is an
            integer between zero and nine with a default value
            of nine (best but slowest compression).  Zero
            corresponds to no compression.

        Jpeg photo
            Compresses each frame of the movie separately with
            the standard JPEG lossy compression algorithm.
            There are two adjustable parameters.  One, the
            "Quality", controls how well the compressed data
            reproduces the original; it is an integer between
            one and a hundred where a hundred represents the
            highest quality.  The default quality level is
            ninety-five.  The other parameter is whether or not
            to use floating-point arithmetic for the DCT
            calculations:  using floating-point may speed
            up the compression process on some computer hardware.
            This implementation will silently pass the data
            through without compression if either dimension
            has less than sixteen pixels and will silently
            trim pixels on the top and right in other cases
            so that the size of both dimensions is divisible
            by sixteen.

        Motion Jpeg A
            Uses a variant of the JPEG scheme adapted for use
            with digital video.   The adjustable parameters for
            this algorithm are the same as those for the
            "Jpeg photo" algorithm.  This implementation will
            silently pass the data through without compression
            if either dimension has less than sixteen pixels
            and will silently trim pixels on the top and right
            in other cases so that the size of both dimensions
            is divisible by sixteen.

    Note that compression schemes which use sampled YUV color
    models will silently trim columns or rows from the top
    and right of the input if the input dimensions are not
    evenly divisible by the sampling factor.
