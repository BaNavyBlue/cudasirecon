KEYWORD

DESCRIPTION radialft_asym

    radialft_asym implements the last step of constructing a
    OTF for use in deconvolution.  It radially averages a 3D
    Fourier transform of a measured point source (the transform
    could be performed with Priism's FTransform3D) and writes
    the result in the format expected by the deconvolution
    application.  

    To use radialft_asym, invoke it from the command line.
    The expected form of the command line is (optional parts
    are shown in brackets):

        radialft_asym transform_file otf_file -cofm=x:y:z \
            [-flip] [-makereal] [-fixaxes=flag]

    The meanings of the different entries on the command line
    are:

    transform_file
        transform_file is expected to be the name of a Priism
        image file which holds the result of a real->complex
        3D Fourier transform where the redundant negative x
        frequencies are not retained (i.e. for Priism's
        FTransform3D do not use the 'fully complex' option)
        and the zero frequency component is at the lower
        left corner of the first section (i.e. for Priism's
        FTransform3D do not use the "zero frequency centered"
        option).  radialft_asym accepts two possible orderings
        of the dimensions in transform_file.  The default is
        to expect that the transform rearranged the dimensions
        so that the untransformed arrangement (x,y,z) became
        (z,x,y).  This is the format generated by the old
        command-line program, threedfftpjs.  If the -flip
        option is supplied, radialft_asym assumes that
        transform_file is in the other accepted format
        where the transform did not rearrange the dimensions
        (Priism's FTransform3D generates this alternative
        format).  radialft_asym expects that the pixel
        spacings in the header of transform_file are the
        unrearranged pixel spacings of the transformed data
        and that the spacings have not been converted to
        frequency units.

    otf_file
        otf_file is the name of the OTF file to generate.

    -cofm=x:y:z
        The -cofm (center-of-mass) option is required in
        order to correct for the point source's displacement
        from the origin.  If the phases have already been
        corrected for the shift, use -cofm=0:0:0.

        Assuming the Fourier transform was done with
        threedfftpjs or with FTransform3D, then x, y, and z
        are the estimated pixel coordinates for the point
        source in the untransformed data.  If you use another
        Fourier transform implementation, the signs on x, y,
        and z may need to be changed to be consistent with
        the sign(s) used in the Fourier transform.  With the
        -flip option, radialft_asym assumes the Fourier
        transform used a negative sign in the complex
        exponential.  Without the -flip option, radialft_asym
        assumes that the net effect of the transform (which
        in the case of threedfftpjs is done first in xy and
        then in z) is to have used a negative sign for the x and
        y dimensions but not for the z dimension.

    -flip
        If -flip is supplied, radialft_asym assumes that
        the 3D Fourier transform did not rearrange the
        dimensions.  Use this option when running
        radialft_asym on the output of Priism's FTransform3D.

    -makereal
        If -makereal is specified, the output OTF is the
        amplitude of the radially averaged input data and
        is therefore real-valued.  If the OTF is to be
        used for 2D deconvolutions, it must be real-valued.

    -fixaxes=flag
        The zero frequency components (the components along
        the x and y axis) of the OTF are frequently
        contaminated by artifacts unrelated to the point
        source.  One source of error is calibration
        inaccuracies in the gain and offset for individual
        CCD pixels; this contributes to terms along the y
        (i.e. radial) axis of the OTF.  One way to attempt
        to correct for these artifacts is to use the -fixaxes
        option which will cause the components along the
        y axis (if flag is greater than or equal to one)
        or both the x and y axes (if flag is greater then
        equal to two) to be replaced with values determined
        from the nearest off-axis components.
